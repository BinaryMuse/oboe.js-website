#demoTemplateHolder {
  display:none;
}

[data-demo] {
  /* reserve some space for the demo: */
  width:500px; height: 200px;

  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -khtml-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;  
}

[data-demo] {
  background-color: $shadedBackgroundColor;
}

rect.fade {
   fill: $shadedBackgroundColor;
}
rect.fade {
    opacity: 0.9;
}


.packet.request {
    fill:nth($categoricalColors, 10);
}

@mixin svg-text-centered {
  text-anchor: middle;
  alignment-baseline:middle;
}


.packet text {
    fill:$nearBlack;
    @include svg-text-centered
}

.controls text {
    @include link; 
}
.controls text.play {
  @include svg-text-centered;
}

.controls:hover {
    cursor: pointer;
}
.controls:hover text.play,
.controls text.reset:hover {
    @include hovered-link;
}
.controls:active text.play,
.controls text.reset:active{
   @include active-link;
}

.pie-divide {
    fill:none;
    stroke:$backgroundColor;
    stroke-width:1;
}

$i: 1;
@while $i < length($categoricalColors) {
  .packet.response#{$i - 1},
  g.client.received-response#{$i - 1} .part#{$i - 1} {
    fill:nth($categoricalColors, $i);
  }  
  $i: $i + 1;
}

line.wire {
   stroke:$highlight;
   stroke-width:3;
}

rect.server {
    fill: $midTone;
}

g.client .frame {
  fill: $midTone;
}
g.client .viewPort {
  fill: $backgroundColor;
}
g.client .part {
  fill:none;
}
